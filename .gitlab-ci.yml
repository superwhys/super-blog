
stages:
  - build

docker-build:
  tags:
    - shell
  stage: build
  variables:
    DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  before_script:
    - docker login registry.gitlab.hoven.com -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD 
  script:
    - docker build --pull --build-arg VENKIT_SERVICE="$CI_PROJECT_NAME:$CI_COMMIT_TAG" -t "$DOCKER_IMAGE_NAME" -t "$CI_REGISTRY_IMAGE:latest" -f deploy/Dockerfile .
    - docker push "$DOCKER_IMAGE_NAME" && docker push "$CI_REGISTRY_IMAGE:latest"
  after_script:
    - rm -rf $CI_PROJECT_DIR
    - docker image rm "$DOCKER_IMAGE_NAME"
    - docker image rm "$CI_REGISTRY_IMAGE:latest"
  retry: 2
  rules:
    - if: $CI_COMMIT_TAG
      exists:
        - deploy/Dockerfile

# stages:
#   - build

# docker-build:
#   tags:
#     - docker
#   image: docker:26.1.3
#   stage: build
#   services:
#     - docker:26.1.3-dind
#       alias:docker

#   variables:
#     DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
#   before_script:
#     - docker login registry.gitlab.hoven.com -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
#   script:
#     - ls -al
#     - docker build --pull --build-arg VENKIT_SERVICE="$CI_PROJECT_NAME:$CI_COMMIT_TAG" -t "$DOCKER_IMAGE_NAME" -t "$CI_REGISTRY_IMAGE:latest" -f deploy/Dockerfile .
#     - docker push "$DOCKER_IMAGE_NAME" && docker push "$CI_REGISTRY_IMAGE:latest"
#     - docker image rm "$DOCKER_IMAGE_NAME" && docker image rm "$CI_REGISTRY_IMAGE:latest"
#   retry: 2
#   rules:
#     - if: $CI_COMMIT_TAG
#       exists:
#         - deploy/Dockerfile